{"name":"GitX-dev","body":"# GitX-dev\r\n\r\nGitX-dev is a fork (variant) of [GitX](http://gitx.frim.nl/), a long-defunct GUI for the [_git_](http://git-scm.com/) version-control system.  It has been maintained and enhanced with productivity and friendliness oriented changes, with effort focused on making a first-class, maintainable tool for today's active developers.\r\n\r\n# Features and Status\r\n\r\nBuilding on the solid foundation of GitX, GitX-dev provides:\r\n\r\n  * History browsing of your repository\r\n  * See a nicely formatted diff of any revision\r\n  * Search based on author or revision subject\r\n  * Look at the complete tree of any revision\r\n    * Preview any file in the tree in a text view or with QuickLook\r\n    * Drag and drop files out of the tree view to copy them to your system\r\n  * Support for all parameters git rev-list has\r\n  * Good performance on large (200+ MB) repositories\r\n\r\nGitX-dev is further specialised for software developers, and is used day-to-day in production environments.  We consider it to be feature-complete for most git workflows, with only uncommon or potentially-destructive commands requiring `git` command-line interaction.\r\n\r\nAs a collaboration tool for a diverse team trying to make other things; we take feedback seriously from everyone involved in software production.  We want to make good version control an invisible, second-nature step of everyone working on a product.  Re-work sucks.\r\n\r\n## How is it better?\r\n\r\nGitX-dev includes a selection of improvements from around the GitX fork community.\r\n\r\n * The awesome branch/remote/tag sidebar from [GitX (L)](http://gitx.laullon.com/)\r\n * Clickable commit references in blame view\r\n\r\nThere are also a range of visible and under-the-hood changes to make GitX-dev a distinct improvement on other forks you may find.\r\n\r\n * Notably better performance on large repositories\r\n * Reliable in-app updates thanks to [Sparkle](http://sparkle.andymatuschak.org/)\r\n * Significantly reduced ([and shrinking](rowanj/gitx#2)!) use of `git` command-line tool in favour of direct use of [libgit2](https://github.com/libgit2/libgit2) and [ObjectiveGit.framework](https://github.com/libgit2/objective-git)\r\n * Lower, more regular memory footprint due to porting to Objective-C Automatic Reference Counting\r\n * Improvements to the command-line `gitx` tool\r\n\r\n## Does this come at a cost?\r\n\r\nMonetarily? No, GitX-dev will always be freely available.  But with a limited number of contributors, and to properly support Mac and iOS devs using the latest-and-greatest (even beta) environments; there is an obvious need to reduce the support and maintenance load.\r\n\r\n * 64-bit Intel only, building for other targets is left as an exercise to the would-be user\r\n * OS X 10.6 Snow Leopard and above.  Honestly, unless somebody volunteers to maintain it, Snow Leopard is [likely to be dropped](rowanj/gitx#40) within a few months of OS X 10.8 Mountain Lion general availability; as I will no longer have the facility to build or test on it\r\n * Not as many graphical niceties as some forks.  Many are lacking only because of the time it would take to find and merge them; some are omitted by conscious decision to keep development focused and the high signal-to-noise ratio of the interface\r\n\r\n## Where can I get it?\r\n\r\n1. Grab the most-recent binary from the [GitHub project downloads page](http://github.com/rowanj/gitx/downloads).  New builds are uploaded here periodically after significant stability or feature improvements.\r\n1. Click the \"Check for updates...\" item in the GitX menu.  New builds are available through in-app update as part of a Continuous Integration scheme that deploys each time a commit is pushed, so there's bleeding-edge code here.\r\n\r\nGitX (R) uses the [Sparkle](http://sparkle.andymatuschak.org/) framework for in-app updates; so once you have version 0.11 or later, you can check for or update to new builds from the GitX menu at any time, or opt-in for automatic updates.\r\n\r\n# Development\r\n\r\nDeveloping for GitX (R) has a few requirements above and beyond those\r\nfor mainline GitX.\r\n\r\nMost third-party code is referenced with Git submodules, so [read up](http://book.git-scm.com/5_submodules.html) on those if you're not familiar.\r\n\r\n  * Very recent Xcode install, 4.3 release strongly recommended.\r\n  * Most development is done on OS X Lion, Snow Leopard may or may not work\r\n  * `CMake` with a working command-line compiling environment for building `libgit2`\r\n  * `node.js` for building `SyntaxHighlighter` (not necessary unless you're updating SyntaxHighlighter itself)\r\n\r\n# License\r\n\r\nGitX is licensed under the GPL version 2. For more information, see the attached COPYING file.\r\n\r\n# Usage\r\n\r\nGitX itself is fairly simple. Most of its power is in the 'gitx' binary, which\r\nyou should install through the menu. the 'gitx' binary supports most of git\r\nrev-list's arguments. For example, you can run `gitx --all' to display all\r\nbranches in the repository, or `gitx -- Documentation' to only show commits\r\nrelating to the 'Documentation' subdirectory. With `gitx -Shaha', gitx will\r\nonly show commits that contain the word 'haha'. Similarly, with 'gitx\r\nv0.2.1..', you will get a list of all commits since version 0.2.1.\r\n\r\n# Helping out\r\n\r\nAny help on GitX is welcome. GitX is programmed in Objective-C, but even if\r\nyou are not a programmer you can do useful things. A short selection:\r\n\r\n  * Give feedback\r\n  * File [bug reports](https://github.com/rowanj/gitx/issues?labels=Bug) and [feature requests](https://github.com/rowanj/gitx/issues?labels=Feature).\r\n","tagline":"Fork of Pieter's nice git GUI for OS X.  By developers, for developers.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}