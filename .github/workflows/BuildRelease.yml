name: build-gitx

on:
  push:
    tags:
      - '*'

jobs:
  build-gitx:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        xcode: [ Xcode_13.2.1 ]
        os: [ macos-11 ]
        abi: [ x86_64 ]
        include:
          - xcode: Xcode
            os: ARM64
            abi: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Find Tag
        id: tagger
        uses: jimschubert/query-tag-action@v2
        with:
          skip-unshallow: 'true'
          abbrev: false
          commit-ish: HEAD
      - name: Set XCode Version
        run: sudo xcode-select -s /Applications/${{ matrix.xcode }}.app
      - name: pre build
        run: cd External/objective-git && script/bootstrap && script/update_libgit2 && cd ../..
      - name: Build project
        run: xcodebuild -workspace GitX.xcworkspace -scheme GitX -archivePath ./GitX archive ARCHS="${{ matrix.abi }}"
      - name: Prepare artifact
        run: |
          mv GitX.xcarchive/Products/Applications/GitX.app .
          hdiutil create -fs HFS+ -srcfolder GitX.app -volname GitX GitX-${{ matrix.abi }}.dmg
      - uses: actions/upload-artifact@v3
        with:
          name: GitX-${{ matrix.abi }}.dmg
          path: GitX-${{ matrix.abi }}.dmg

  release:
    needs: build-gitx
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Find Tag
        id: tagger
        uses: jimschubert/query-tag-action@v2
        with:
          skip-unshallow: 'true'
          abbrev: false
          commit-ish: HEAD
      - uses: actions/download-artifact@v3
        with:
          name: GitX-x86_64.dmg
      - uses: actions/download-artifact@v3
        with:
          name: GitX-arm64.dmg

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{steps.tagger.outputs.tag}}
          generate_release_notes: true
          prerelease: true
          name: ${{steps.tagger.outputs.tag}}
          files: |
            GitX-x86_64.dmg
            GitX-arm64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: update Sparkle
        run: curl -u $GITHUB_ACTOR:${{ secrets.GITHUBTOKEN }} -X POST https://api.github.com/repos/$GITHUB_REPOSITORY/pages/builds
